{"version":3,"file":"core.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { IntegrationPlugin } from './plugin';\nimport {\n  IntegrationAction,\n  IntegrationActionExcutorParams,\n  IntegrationEvent,\n} from './types';\nimport { omitBy } from 'lodash';\n\ninterface Config {\n  name: string;\n  plugins: IntegrationPlugin[];\n  SystemActions: IntegrationAction[];\n  SystemEvents: IntegrationEvent[];\n}\n\nconst CORE_PLUGIN_NAME = 'SYSTEM';\n\nclass IntegrationFramework {\n  //global events grouped by plugin\n  globalEvents: Map<string, Record<string, IntegrationEvent>> = new Map();\n  // global event handlers\n  globalEventHandlers: any[] = [];\n  // global actions grouped by plugin\n  globalActions: Map<string, Record<string, IntegrationAction<any>>> =\n    new Map();\n  plugins: Map<string, IntegrationPlugin> = new Map();\n\n  registerPlugin(pluginDefinition: IntegrationPlugin) {\n    const { name } = pluginDefinition;\n    this.plugins.set(name, pluginDefinition);\n\n    pluginDefinition.defineEvents();\n\n    this.registerEvents({\n      events: Object.values(pluginDefinition.getEvents()),\n      pluginName: name,\n    });\n\n    this.globalEventHandlers.push(...pluginDefinition.getEventHandlers());\n\n    this.registerActions({\n      actions: Object.values(pluginDefinition.getActions()),\n      pluginName: name,\n    });\n  }\n\n  registerEvents({\n    events,\n    pluginName = CORE_PLUGIN_NAME,\n  }: {\n    events: IntegrationEvent[];\n    pluginName?: string;\n  }) {\n    const pluginEvents = this.globalEvents.get(pluginName) || {};\n    this.globalEvents.set(pluginName, {\n      ...pluginEvents,\n      ...events.reduce((acc, event) => ({ ...acc, [event.key]: event }), {}),\n    });\n  }\n\n  registerActions({\n    actions,\n    pluginName = CORE_PLUGIN_NAME,\n  }: {\n    actions: IntegrationAction[];\n    pluginName?: string;\n  }) {\n    const pluginActions = this.globalActions.get(pluginName) || {};\n    this.globalActions.set(pluginName, {\n      ...pluginActions,\n      ...actions.reduce(\n        (acc, action) => ({ ...acc, [action.type]: action }),\n        {}\n      ),\n    });\n  }\n\n  availablePlugins() {\n    return Array.from(this.plugins.entries()).map(([name, plugin]) => {\n      return {\n        name,\n        plugin,\n      };\n    });\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.get(name);\n  }\n\n  getGlobalEvents() {\n    return this.globalEvents;\n  }\n\n  getSystemEvents() {\n    const events = this.globalEvents.get(CORE_PLUGIN_NAME);\n    return omitBy(events, (value) => value.triggerProperties?.isHidden);\n  }\n\n  getEventsByPlugin(name: string) {\n    return this.globalEvents.get(name);\n  }\n\n  getGlobalEventHandlers() {\n    return this.globalEventHandlers;\n  }\n\n  getActions() {\n    return this.globalActions;\n  }\n\n  getSystemActions() {\n    return this.globalActions.get(CORE_PLUGIN_NAME);\n  }\n\n  getActionsByPlugin(name: string, includeHidden?: boolean) {\n    const pluginActions = this.globalActions.get(name);\n\n    if (includeHidden) {\n      return pluginActions;\n    }\n    return omitBy(pluginActions, (value) => value.isHidden);\n  }\n\n  async executeAction({\n    pluginName = CORE_PLUGIN_NAME,\n    action,\n    payload,\n  }: {\n    pluginName?: string;\n    action: string;\n    payload: IntegrationActionExcutorParams<any>;\n  }) {\n    if (pluginName === CORE_PLUGIN_NAME) {\n      const actionExecutor = this.globalActions.get(CORE_PLUGIN_NAME)?.[action];\n\n      if (!actionExecutor) {\n        throw new Error(`No global action exists for ${action}`);\n      }\n\n      return actionExecutor.executor(payload);\n    }\n\n    const plugin = this.getPlugin(pluginName);\n    if (!plugin) {\n      throw new Error(`No plugin exists for ${pluginName}`);\n    }\n\n    const actionExecutor = plugin.getActions()?.[action];\n\n    if (!actionExecutor) {\n      throw new Error(`No action exists for ${action} in ${pluginName}`);\n    }\n\n    return actionExecutor.executor(payload);\n  }\n}\n\nexport function createFramework(config: Config) {\n  console.log('Hello from FRAMEWORK');\n  console.log(JSON.stringify(config, null, 2));\n\n  const framework = new IntegrationFramework();\n\n  // Register plugins\n  config.plugins.forEach((plugin) => {\n    framework.registerPlugin(plugin);\n  });\n\n  // Register System actions\n  framework.registerActions({\n    actions: config.SystemActions,\n  });\n\n  // Register System events\n  framework.registerEvents({\n    events: config.SystemEvents,\n  });\n\n  return framework;\n}\n"],"names":["CORE_PLUGIN_NAME","IntegrationFramework","globalEvents","Map","globalEventHandlers","globalActions","plugins","_proto","prototype","registerPlugin","pluginDefinition","_this$globalEventHand","name","set","defineEvents","registerEvents","events","Object","values","getEvents","pluginName","push","apply","getEventHandlers","registerActions","actions","getActions","_ref","_ref$pluginName","pluginEvents","get","_extends","reduce","acc","event","_extends2","key","_ref2","_ref2$pluginName","pluginActions","action","_extends3","type","availablePlugins","Array","from","entries","map","_ref3","plugin","getPlugin","getGlobalEvents","getSystemEvents","omitBy","value","_value$triggerPropert","triggerProperties","isHidden","getEventsByPlugin","getGlobalEventHandlers","getSystemActions","getActionsByPlugin","includeHidden","executeAction","_executeAction","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref4","_plugin$getActions","_ref4$pluginName","payload","_this$globalActions$g","_actionExecutor","actionExecutor","wrap","_callee$","_context","prev","next","Error","abrupt","executor","stop","_x","arguments","createFramework","config","console","log","JSON","stringify","framework","forEach","SystemActions","SystemEvents"],"mappings":"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"}