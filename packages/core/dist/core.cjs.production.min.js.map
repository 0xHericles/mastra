{"version":3,"file":"core.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { IntegrationPlugin } from './plugin';\nimport {\n  IntegrationAction,\n  IntegrationActionExcutorParams,\n  IntegrationEvent,\n} from './types';\nimport { omitBy } from 'lodash';\n\ninterface Config {\n  name: string;\n  plugins: IntegrationPlugin[];\n  SystemActions: IntegrationAction[];\n  SystemEvents: IntegrationEvent[];\n}\n\nconst CORE_PLUGIN_NAME = 'SYSTEM';\n\nclass IntegrationFramework {\n  //global events grouped by plugin\n  globalEvents: Map<string, Record<string, IntegrationEvent>> = new Map();\n  // global event handlers\n  globalEventHandlers: any[] = [];\n  // global actions grouped by plugin\n  globalActions: Map<string, Record<string, IntegrationAction<any>>> =\n    new Map();\n  plugins: Map<string, IntegrationPlugin> = new Map();\n\n  registerPlugin(pluginDefinition: IntegrationPlugin) {\n    const { name } = pluginDefinition;\n    this.plugins.set(name, pluginDefinition);\n\n    pluginDefinition.defineEvents();\n\n    this.registerEvents({\n      events: Object.values(pluginDefinition.getEvents()),\n      pluginName: name,\n    });\n\n    this.globalEventHandlers.push(...pluginDefinition.getEventHandlers());\n\n    this.registerActions({\n      actions: Object.values(pluginDefinition.getActions()),\n      pluginName: name,\n    });\n  }\n\n  registerEvents({\n    events,\n    pluginName = CORE_PLUGIN_NAME,\n  }: {\n    events: IntegrationEvent[];\n    pluginName?: string;\n  }) {\n    const pluginEvents = this.globalEvents.get(pluginName) || {};\n    this.globalEvents.set(pluginName, {\n      ...pluginEvents,\n      ...events.reduce((acc, event) => ({ ...acc, [event.key]: event }), {}),\n    });\n  }\n\n  registerActions({\n    actions,\n    pluginName = CORE_PLUGIN_NAME,\n  }: {\n    actions: IntegrationAction[];\n    pluginName?: string;\n  }) {\n    const pluginActions = this.globalActions.get(pluginName) || {};\n    this.globalActions.set(pluginName, {\n      ...pluginActions,\n      ...actions.reduce(\n        (acc, action) => ({ ...acc, [action.type]: action }),\n        {}\n      ),\n    });\n  }\n\n  availablePlugins() {\n    return Array.from(this.plugins.entries()).map(([name, plugin]) => {\n      return {\n        name,\n        plugin,\n      };\n    });\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.get(name);\n  }\n\n  getGlobalEvents() {\n    return this.globalEvents;\n  }\n\n  getSystemEvents() {\n    const events = this.globalEvents.get(CORE_PLUGIN_NAME);\n    return omitBy(events, (value) => value.triggerProperties?.isHidden);\n  }\n\n  getEventsByPlugin(name: string) {\n    return this.globalEvents.get(name);\n  }\n\n  getGlobalEventHandlers() {\n    return this.globalEventHandlers;\n  }\n\n  getActions() {\n    return this.globalActions;\n  }\n\n  getSystemActions() {\n    return this.globalActions.get(CORE_PLUGIN_NAME);\n  }\n\n  getActionsByPlugin(name: string, includeHidden?: boolean) {\n    const pluginActions = this.globalActions.get(name);\n\n    if (includeHidden) {\n      return pluginActions;\n    }\n    return omitBy(pluginActions, (value) => value.isHidden);\n  }\n\n  async executeAction({\n    pluginName = CORE_PLUGIN_NAME,\n    action,\n    payload,\n  }: {\n    pluginName?: string;\n    action: string;\n    payload: IntegrationActionExcutorParams<any>;\n  }) {\n    if (pluginName === CORE_PLUGIN_NAME) {\n      const actionExecutor = this.globalActions.get(CORE_PLUGIN_NAME)?.[action];\n\n      if (!actionExecutor) {\n        throw new Error(`No global action exists for ${action}`);\n      }\n\n      return actionExecutor.executor(payload);\n    }\n\n    const plugin = this.getPlugin(pluginName);\n    if (!plugin) {\n      throw new Error(`No plugin exists for ${pluginName}`);\n    }\n\n    const actionExecutor = plugin.getActions()?.[action];\n\n    if (!actionExecutor) {\n      throw new Error(`No action exists for ${action} in ${pluginName}`);\n    }\n\n    return actionExecutor.executor(payload);\n  }\n}\n\nexport function createFramework(config: Config) {\n  console.log('Hello from FRAMEWORK');\n  console.log(JSON.stringify(config, null, 2));\n\n  const framework = new IntegrationFramework();\n\n  // Register plugins\n  config.plugins.forEach((plugin) => {\n    framework.registerPlugin(plugin);\n  });\n\n  // Register System actions\n  framework.registerActions({\n    actions: config.SystemActions,\n  });\n\n  // Register System events\n  framework.registerEvents({\n    events: config.SystemEvents,\n  });\n\n  return framework;\n}\n"],"names":["CORE_PLUGIN_NAME","IntegrationFramework","this","globalEvents","Map","globalEventHandlers","globalActions","plugins","_proto","prototype","registerPlugin","pluginDefinition","_this$globalEventHand","name","set","defineEvents","registerEvents","events","Object","values","getEvents","pluginName","push","apply","getEventHandlers","registerActions","actions","getActions","_ref","_ref$pluginName","pluginEvents","get","_extends","reduce","acc","event","_extends2","key","_ref2","_ref2$pluginName","pluginActions","action","_extends3","type","availablePlugins","Array","from","entries","map","_ref3","plugin","getPlugin","getGlobalEvents","getSystemEvents","omitBy","value","_value$triggerPropert","triggerProperties","isHidden","getEventsByPlugin","getGlobalEventHandlers","getSystemActions","getActionsByPlugin","includeHidden","executeAction","_executeAction","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref4","_plugin$getActions","_ref4$pluginName","payload","_this$globalActions$g","_actionExecutor","actionExecutor","wrap","_context","prev","next","Error","abrupt","executor","stop","_x","arguments","config","console","log","JSON","stringify","framework","forEach","SystemActions","SystemEvents"],"mappings":"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"}